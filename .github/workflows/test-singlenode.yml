name: Single node test

on:
  # Allow manual execution on any branch
  workflow_dispatch:
    inputs:
      target-cloud:
        description: >-
          The cloud to target for the run.
          Leave blank to use the default cloud.
        type: choice
        options:
          - ""
          - arcus
          - leafcloud
  # Execute by default on pull requests to the devel branch
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    branches:
      - devel
    # Only run the tests when something changes that affects us
    paths:
      - .gitattributes
      - .gitignore
      - requirements.txt
      - requirements.yml
      - .github/actions/**
      - .github/workflows/test-singlenode.yml
      - bin/**
      - "!bin/ci-exec"
      - "!bin/create-merge-branch"
      - "!bin/tilt-*"
      - environments/base/**
      - environments/singlenode/**
      - environments/demo/**
      - environments/ci/**

# Use the head ref for workflow concurrency, with cancellation
# This should mean that any previous runs of this workflow for the same PR
# are cancelled when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  # This job exists so that PRs from outside the main repo are rejected
  fail_on_remote:
    runs-on: ubuntu-latest
    steps:
      - name: Code under test must be from a branch in the azimuth-config repo
        run: exit ${{ github.repository == 'stackhpc/azimuth-config' && '0' || '1' }}

  run_azimuth_tests:
    needs: [fail_on_remote]
    runs-on: ubuntu-latest
    steps:
      # We need to check out the code under test first in order to use local actions
      - name: Checkout code under test
        uses: actions/checkout@v3

      - name: Set up Azimuth environment
        uses: ./.github/actions/setup
        with:
          os-clouds: ${{ secrets.OS_CLOUDS }}
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          target-cloud: ${{ inputs.target-cloud || vars.TARGET_CLOUD }}
        # GitHub terminates jobs after 6 hours
        # We don't want jobs to acquire the lock then get timed out before they can finish
        # So wait a maximum of 3 hours to acquire the lock, leaving 3 hours for other tasks in the job
        timeout-minutes: 180

      - name: Provision Azimuth
        uses: ./.github/actions/provision

      - name: Run Azimuth tests
        uses: ./.github/actions/test

      - name: Destroy Azimuth
        uses: ./.github/actions/destroy
        if: ${{ always() }}
