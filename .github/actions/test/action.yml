name: Azimuth CI tests
description: Tests an Azimuth environment using the CI config.
inputs:
  test-report-artifact-name:
    description: The name to use for the test report artifact.
    required: true
    default: test-report
  logs-artifact-name:
    description: The name to use for the logs artifact.
    required: true
    default: component-logs
runs:
  using: composite
  steps:
    - name: Check expected alerts are pending or firing
      shell: bash
      # Make sure to source the ci environment before running the tests
      run: |
        set -e
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        ./bin/check-alerts

    - name: Generate test suite
      shell: bash
      # Make sure to source the ci environment before running the provision
      run: |
        set -e
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        ansible-playbook stackhpc.azimuth_ops.generate_tests -e @extra-vars.yml

    - name: Run test suite
      shell: bash
      run: |
        set -eo pipefail
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        test_directory="$(ansible -m debug -a "var=$VAR_NAME" all | jq -r ".plays[0].tasks[0].hosts.localhost.$VAR_NAME")"
        robot --loglevel debug --consolecolors on "$test_directory"
      env:
        ANSIBLE_LOAD_CALLBACK_PLUGINS: "true"
        ANSIBLE_STDOUT_CALLBACK: json
        MOZ_HEADLESS: "1"
        VAR_NAME: generate_tests_suite_directory

    - name: Upload test report artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.test-report-artifact-name }}
        path: |
          output.xml
          log.html
          report.html
      if: ${{ always() }}

    - name: Output component logs
      shell: bash
      run: |
        kubectl -n azimuth logs deploy/azimuth-api > azimuth-api-logs.txt
        kubectl -n azimuth logs deploy/azimuth-caas-operator > azimuth-caas-operator-logs.txt
        kubectl -n azimuth logs deploy/azimuth-capi-operator > azimuth-capi-operator-logs.txt
        kubectl -n azimuth logs deploy/azimuth-identity-operator > azimuth-identity-operator-logs.txt
        kubectl -n azimuth logs deploy/azimuth-ui > azimuth-ui-logs.txt
        kubectl -n azimuth logs deploy/zenith-server-registrar > zenith-server-registrar-logs.txt
        kubectl -n azimuth logs deploy/zenith-server-sshd > zenith-server-sshd-logs.txt
        kubectl -n azimuth logs deploy/zenith-server-sync > zenith-server-sync-logs.txt
        kubectl -n capi-addon-system logs deploy/cluster-api-addon-provider > cluster-api-addon-provider-logs.txt
        kubectl -n capi-janitor-system logs deploy/cluster-api-janitor-openstack > cluster-api-janitor-openstack-logs.txt
        kubectl -n capi-kubeadm-bootstrap-system logs deploy/capi-kubeadm-bootstrap-controller-manager > capi-kubeadm-bootstrap-controller-manager-logs.txt
        kubectl -n capi-kubeadm-control-plane-system logs deploy/capi-kubeadm-control-plane-controller-manager > capi-kubeadm-control-plane-controller-manager-logs.txt
        kubectl -n capi-system logs deploy/capi-controller-manager > capi-controller-manager-logs.txt
        kubectl -n capo-system logs deploy/capo-controller-manager > capo-controller-manager-logs.txt
      if: ${{ always() }}

    - name: Upload log artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.logs-artifact-name }}
        path: ./*-logs.txt
      if: ${{ always() }}
