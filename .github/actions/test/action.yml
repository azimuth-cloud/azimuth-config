name: Azimuth CI tests
description: Tests an Azimuth environment using the CI config.
inputs:
  test-report-artifact-name:
    description: The name to use for the test report artifact.
    required: true
    default: test-report
  debug-bundle-artifact-name:
    description: The name to use for the debug bundle artifact.
    required: true
    default: debug-bundle
runs:
  using: composite
  steps:
    - name: Check expected alerts are pending or firing
      shell: bash
      # Make sure to source the ci environment before running the tests
      run: |
        set -e
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        ./bin/check-alerts

    - name: Generate test suite
      shell: bash
      # Make sure to source the ci environment before running the provision
      run: |
        set -e
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        ansible-playbook stackhpc.azimuth_ops.generate_tests -e @extra-vars.yml

    - name: Run test suite
      shell: bash
      run: |
        set -eo pipefail
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_ENVIRONMENT"
        test_directory="$(ansible -m debug -a "var=$VAR_NAME" all | jq -r ".plays[0].tasks[0].hosts.localhost.$VAR_NAME")"
        robot --loglevel debug --consolecolors on "$test_directory"
      env:
        ANSIBLE_LOAD_CALLBACK_PLUGINS: "true"
        ANSIBLE_STDOUT_CALLBACK: json
        MOZ_HEADLESS: "1"
        VAR_NAME: generate_tests_suite_directory

    - name: Upload test report artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.test-report-artifact-name }}
        path: |
          output.xml
          log.html
          report.html
      if: ${{ always() }}

    - name: Create debug bundle
      shell: bash
      run: |
        set -e
        source ./ci.env
        source ./bin/activate "$AZIMUTH_CONFIG_ENVIRONMENT" "$AZIMUTH_CONFIG_ENVIRONMENT"
        ./bin/create-debug-bundle
      if: ${{ always() }}

    - name: Upload debug bundle
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.debug-bundle-artifact-name }}
        path: debug-bundle.tar.gz
      if: ${{ always() }}
